---
http_interactions:
- request:
    method: post
    uri: http://localhost:9200/all-current/_search
    body:
      encoding: UTF-8
      string: '{"from":"0","size":20,"query":{"bool":{"should":null,"must":[{"bool":{"must":{"match_all":{}},"filter":{"geo_bounding_box":{"locations.geoshape":{"top":42.886,"bottom":41.239,"left":-73.507,"right":-69.928}}}}}],"filter":[]}},"aggregations":{"access_to_files":{"nested":{"path":"rights"},"aggs":{"only_file_access":{"filter":{"terms":{"rights.kind":["Access
        to files"]}},"aggs":{"access_types":{"terms":{"field":"rights.description.keyword"}}}}}},"contributors":{"nested":{"path":"contributors"},"aggs":{"contributor_names":{"terms":{"field":"contributors.value.keyword"}}}},"content_type":{"terms":{"field":"content_type"}},"content_format":{"terms":{"field":"format"}},"languages":{"terms":{"field":"languages.keyword"}},"literary_form":{"terms":{"field":"literary_form"}},"places":{"nested":{"path":"subjects"},"aggs":{"only_spatial":{"filter":{"terms":{"subjects.kind":["Dublin
        Core; Spatial"]}},"aggs":{"place_names":{"terms":{"field":"subjects.value.keyword"}}}}}},"source":{"terms":{"field":"source"}},"subjects":{"nested":{"path":"subjects"},"aggs":{"subject_names":{"terms":{"field":"subjects.value.keyword"}}}}},"sort":[{"_score":{"order":"desc"}},{"dates.value.as_date":{"order":"desc","nested":{"path":"dates"}}}]}'
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin x86_64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Host:
      - localhost:9200
      X-Amz-Date:
      - 20240301T183325Z
      X-Amz-Content-Sha256:
      - "<REDACTED_SHA>"
      Authorization:
      - "<REDACTED_AUTHORIZATION>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 01 Mar 2024 18:33:26 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 01 Mar 2024 18:33:26 GMT
recorded_with: VCR 6.2.0
