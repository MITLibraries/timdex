---
http_interactions:
- request:
    method: get
    uri: http://localhost:9200/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin x86_64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Host:
      - localhost:9200
      X-Amz-Date:
      - 20240221T141906Z
      X-Amz-Content-Sha256:
      - "<REDACTED_SHA>"
      Authorization:
      - "<REDACTED_AUTHORIZATION>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 21 Feb 2024 14:19:06 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "name" : "d2308ba9d0028096d973728661db1db3",
          "cluster_name" : "222053980223:timdex-dev",
          "cluster_uuid" : "JifTIhfORr6Uz2wpJ9QsSw",
          "version" : {
            "number" : "7.10.2",
            "build_type" : "tar",
            "build_hash" : "unknown",
            "build_date" : "2023-12-08T16:01:39.080417158Z",
            "build_snapshot" : false,
            "lucene_version" : "9.7.0",
            "minimum_wire_compatibility_version" : "7.10.0",
            "minimum_index_compatibility_version" : "7.0.0"
          },
          "tagline" : "The OpenSearch Project: https://opensearch.org/"
        }
  recorded_at: Wed, 21 Feb 2024 14:19:06 GMT
- request:
    method: post
    uri: http://localhost:9200/all-current/_search
    body:
      encoding: UTF-8
      string: '{"from":"0","size":20,"query":{"bool":{"should":null,"must":[{"bool":{"must":{"match_all":{}},"filter":{"geo_distance":{"distance":"100000km","locations.geoshape":{"lat":42.3596653,"lon":-71.0921384}}}}}],"filter":[]}},"aggregations":{"contributors":{"nested":{"path":"contributors"},"aggs":{"contributor_names":{"terms":{"field":"contributors.value.keyword"}}}},"content_type":{"terms":{"field":"content_type"}},"content_format":{"terms":{"field":"format"}},"languages":{"terms":{"field":"languages.keyword"}},"literary_form":{"terms":{"field":"literary_form"}},"places":{"nested":{"path":"subjects"},"aggs":{"only_spatial":{"filter":{"terms":{"subjects.kind":["Dublin
        Core; Spatial"]}},"aggs":{"place_names":{"terms":{"field":"subjects.value.keyword"}}}}}},"source":{"terms":{"field":"source"}},"subjects":{"nested":{"path":"subjects"},"aggs":{"subject_names":{"terms":{"field":"subjects.value.keyword"}}}}},"sort":[{"_score":{"order":"desc"}},{"dates.value.as_date":{"order":"desc","nested":{"path":"dates"}}}]}'
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin x86_64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Host:
      - localhost:9200
      X-Amz-Date:
      - 20240221T141906Z
      X-Amz-Content-Sha256:
      - "<REDACTED_SHA>"
      Authorization:
      - "<REDACTED_AUTHORIZATION>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 21 Feb 2024 14:19:07 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 21 Feb 2024 14:19:07 GMT
recorded_with: VCR 6.2.0
