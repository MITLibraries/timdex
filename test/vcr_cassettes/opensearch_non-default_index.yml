---
http_interactions:
- request:
    method: get
    uri: http://localhost:9200/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - 'opensearch-ruby/2.0.0 (RUBY_VERSION: 2.7.6; darwin x86_64; Faraday v1.10.0)'
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '350'
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "name" : "e03207b01655",
          "cluster_name" : "docker-cluster",
          "cluster_uuid" : "9OY_6pKWQKWHQbxorP7qaw",
          "version" : {
            "distribution" : "opensearch",
            "number" : "1.3.0",
            "build_type" : "tar",
            "build_hash" : "e45991597c86ba1bbcc36ee1dfdc165197a913af",
            "build_date" : "2022-03-15T19:07:30.455415Z",
            "build_snapshot" : false,
            "lucene_version" : "8.10.1",
            "minimum_wire_compatibility_version" : "6.8.0",
            "minimum_index_compatibility_version" : "6.0.0-beta1"
          },
          "tagline" : "The OpenSearch Project: https://opensearch.org/"
        }
  recorded_at: Wed, 13 Jul 2022 19:37:49 GMT
- request:
    method: post
    uri: http://localhost:9200/rdi*/_search
    body:
      encoding: UTF-8
      string: '{"from":0,"size":20,"query":{"bool":{"should":null,"must":[{"match":{"title":"data"}}],"filter":[]}},"highlight":{"pre_tags":["\u003cspan
        class=\"highlight\"\u003e"],"post_tags":["\u003c/span\u003e"],"fields":{"*":{}}},"aggregations":{"collections":{"terms":{"field":"collections.keyword"}},"contributors":{"nested":{"path":"contributors"},"aggs":{"contributor_names":{"terms":{"field":"contributors.value.keyword"}}}},"content_type":{"terms":{"field":"content_type"}},"content_format":{"terms":{"field":"format"}},"languages":{"terms":{"field":"languages.keyword"}},"literary_form":{"terms":{"field":"literary_form"}},"source":{"terms":{"field":"source"}},"subjects":{"nested":{"path":"subjects"},"aggs":{"subject_names":{"terms":{"field":"subjects.value.keyword"}}}}}}'
    headers:
      User-Agent:
      - 'opensearch-ruby/2.0.0 (RUBY_VERSION: 2.7.6; darwin x86_64; Faraday v1.10.0)'
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '21415'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 13 Jul 2022 19:37:49 GMT
recorded_with: VCR 6.1.0
