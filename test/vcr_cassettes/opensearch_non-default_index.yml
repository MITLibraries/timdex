---
http_interactions:
- request:
    method: get
    uri: http://localhost:9200/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin x86_64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Host:
      - localhost:9200
      X-Amz-Date:
      - 20240215T235954Z
      X-Amz-Content-Sha256:
      - "<REDACTED_SHA>"
      Authorization:
      - "<REDACTED_AUTHORIZATION>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 15 Feb 2024 23:59:54 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "name" : "d5291b54b4271aa4d5dcc1d23eb6bb58",
          "cluster_name" : "222053980223:timdex-dev",
          "cluster_uuid" : "JifTIhfORr6Uz2wpJ9QsSw",
          "version" : {
            "number" : "7.10.2",
            "build_type" : "tar",
            "build_hash" : "unknown",
            "build_date" : "2023-12-08T16:01:39.080417158Z",
            "build_snapshot" : false,
            "lucene_version" : "9.7.0",
            "minimum_wire_compatibility_version" : "7.10.0",
            "minimum_index_compatibility_version" : "7.0.0"
          },
          "tagline" : "The OpenSearch Project: https://opensearch.org/"
        }
  recorded_at: Thu, 15 Feb 2024 23:59:54 GMT
- request:
    method: post
    uri: http://localhost:9200/geo/_search
    body:
      encoding: UTF-8
      string: '{"from":0,"size":20,"query":{"bool":{"should":null,"must":[{"match":{"title":"bermuda"}}],"filter":[]}},"aggregations":{"contributors":{"nested":{"path":"contributors"},"aggs":{"contributor_names":{"terms":{"field":"contributors.value.keyword"}}}},"content_type":{"terms":{"field":"content_type"}},"content_format":{"terms":{"field":"format"}},"dates_ranges":{"nested":{"path":"dates"},"aggs":{"years":{"date_range":{"field":"dates.value.as_date","format":"yyyy","missing":"1989","ranges":[{"to":"1990"},{"from":"1990","to":"2000"},{"from":"2000","to":"2005"},{"from":"2005","to":"2010"},{"from":"2010","to":"2015"},{"from":"2015","to":"now/y"},{"from":"now/y"}]}}}},"languages":{"terms":{"field":"languages.keyword"}},"literary_form":{"terms":{"field":"literary_form"}},"places":{"nested":{"path":"subjects"},"aggs":{"only_spatial":{"filter":{"terms":{"subjects.kind":["Dublin
        Core; Spatial"]}},"aggs":{"place_names":{"terms":{"field":"subjects.value.keyword"}}}}}},"source":{"terms":{"field":"source"}},"subjects":{"nested":{"path":"subjects"},"aggs":{"subject_names":{"terms":{"field":"subjects.value.keyword"}}}}},"sort":[{"_score":{"order":"desc"}},{"dates.value.as_date":{"order":"desc","nested":{"path":"dates"}}}]}'
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin x86_64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Host:
      - localhost:9200
      X-Amz-Date:
      - 20240215T235954Z
      X-Amz-Content-Sha256:
      - "<REDACTED_SHA>"
      Authorization:
      - "<REDACTED_AUTHORIZATION>"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 15 Feb 2024 23:59:54 GMT
      Content-Type:
      - application/json; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding, User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 15 Feb 2024 23:59:54 GMT
recorded_with: VCR 6.2.0
