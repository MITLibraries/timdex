---
http_interactions:
- request:
    method: get
    uri: http://localhost:9200/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin arm64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '567'
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "name" : "57e0dc0fc53d",
          "cluster_name" : "docker-cluster",
          "cluster_uuid" : "DoZb5LNrT7eUN8gEh-aLJg",
          "version" : {
            "distribution" : "opensearch",
            "number" : "2.11.1",
            "build_type" : "tar",
            "build_hash" : "6b1986e964d440be9137eba1413015c31c5a7752",
            "build_date" : "2023-11-29T21:45:35.524809067Z",
            "build_snapshot" : false,
            "lucene_version" : "9.7.0",
            "minimum_wire_compatibility_version" : "7.10.0",
            "minimum_index_compatibility_version" : "7.0.0"
          },
          "tagline" : "The OpenSearch Project: https://opensearch.org/"
        }
  recorded_at: Mon, 12 Feb 2024 22:21:08 GMT
- request:
    method: post
    uri: http://localhost:9200/timdex-prod/_search
    body:
      encoding: UTF-8
      string: '{"from":"0","size":20,"query":{"bool":{"should":[{"prefix":{"title.exact_value":{"value":"train
        stations","boost":15.0}}},{"term":{"title":{"value":"train stations","boost":1.0}}},{"nested":{"path":"contributors","query":{"term":{"contributors.value":{"value":"train
        stations","boost":0.1}}}}}],"must":[{"multi_match":{"query":"train stations","fields":["alternate_titles","call_numbers","citation","contents","contributors.value","dates.value","edition","funding_information.*","identifiers.value","languages","locations.value","notes.value","numbering","publication_information","subjects.value","summary","title"]}},{"bool":{"must":{"match_all":{}},"filter":{"geo_distance":{"distance":"100000km","locations.geoshape":{"lat":42.3596653,"lon":-71.0921384}}}}}],"filter":[]}},"aggregations":{"contributors":{"nested":{"path":"contributors"},"aggs":{"contributor_names":{"terms":{"field":"contributors.value.keyword"}}}},"content_type":{"terms":{"field":"content_type"}},"content_format":{"terms":{"field":"format"}},"languages":{"terms":{"field":"languages.keyword"}},"literary_form":{"terms":{"field":"literary_form"}},"source":{"terms":{"field":"source"}},"subjects":{"nested":{"path":"subjects"},"aggs":{"subject_names":{"terms":{"field":"subjects.value.keyword"}}}}}}'
    headers:
      User-Agent:
      - 'opensearch-ruby/3.1.0 (RUBY_VERSION: 3.2.2; darwin arm64; Faraday v2.9.0)'
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Content-Length:
      - '57886'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 12 Feb 2024 22:21:08 GMT
recorded_with: VCR 6.2.0
